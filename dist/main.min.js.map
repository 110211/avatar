{"version":3,"sources":["main.js"],"names":["express","require","db","bodyParser","app","port","env","PORT","process","urlencoded","extended","use","json","__dirname","req","res","sendFile","root","get","setHeader","header","token","jwt","getTokenFromHeader","verifyJWTToken","verify","send","JSON","stringify","message","user","success","password","data","regeneratorRuntime","async","_context","prev","next","body","awrap","sent","createJWTToken","right","stop"],"mappings":"aACA,IAAMA,QAAUC,QAAQ,WAAlBD,WAAUC,QAAQ,eAElBC,GAAKD,QAAQ,eADbE,IAAAA,QAAaF,aAGbG,IAAMJ,UAFJK,KAAGJ,QAAQK,IAAAC,MAAnB,IAEAC,QAASF,IAAGN,GAAO,mBAKnBQ,IAAAA,IAAQF,WAASG,WAAA,CAAAC,UAAjB,KAEAN,IAAIO,IAAIR,QAAAA,WAAWM,CAAAA,UAAW,KAAEC,IAAAA,IAAAA,QAAUE,KAAA,CAAAF,UAAA,KAAZN,IAA9BO,IAAAX,QAAA,OAAAa,YAC4BH,IAAAA,IAAAA,IAAU,SAAAI,EAAAC,GAAtCA,EAAAC,SAAA,eAAA,CAAAC,KAAAJ,cACqBT,IAArBc,IAAA,SAAA,SAAAJ,EAAAC,GACIJ,EAAIX,SAAO,eAAQa,CAAAA,KAAvBA,cAGkCI,IAAAA,IAAI,MAAEJ,SAAAA,EAAAA,GAApCE,EAAAI,UAAA,eAAA,mCADJ,IAAAC,EAAAN,EAAAM,OAAA,iBAIQC,EAARC,IAAkBC,mBAAcH,GACxBJ,EAASM,IAAAE,eAAgBH,GAAKI,EAG9BV,EAAAW,KAAOC,KAAAC,UAAMb,CAANc,QAAc,gCAAAC,KAAAL,EAAAK,KAAAC,SAAA,KAHzBhB,EAAAW,KAAAC,KAAAC,UAAA,CAAAC,QAAA,qCAAAE,SAAA,OAOA3B,IAAAc,IAAIO,SAAY,SAACD,EAAAA,GASjBT,EAAIC,SAAS,iBAAkB,CAACC,KAAMJ,cAPsCkB,IAAAA,KAAAA,aAAS,SAAAjB,EAAAC,GAAA,IAAAe,EAAAE,EAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAjFR,EAAAhB,EAAAyB,KAAAT,KADJE,EAEOlB,EAAAyB,KAAAP,SAD8EI,EAAAE,KAAA,EAAAJ,mBAAAM,MAEnEZ,GAAAA,SAAU,eAAA,QAAA,CAAAE,KAAAA,EAAAE,SAAAA,KAFyD,KAAA,EAE7EN,EAF6EU,EAAAK,KAExDZ,EAAAA,UAAS,eAAA,mCAA8CC,EAAbA,EAAML,OAAaM,EAAAA,KAASJ,KAAAC,UAAA,CAA/FG,SAAA,EACHV,MAAAC,IAAAoB,eAAA,CAAAZ,KAAAA,IATLa,MAAAV,EAAA,GAAAU,MAYQd,QAAU,sBAGlBd,EAAAW,KAAAC,KAAAC,UAAA,CAiBYG,SAAS,EAfZF,QAAT,iCAXyF,KAAA,EAAA,IAAA,MAAA,OAAAO,EAAAQ,YAYjFd,IAAAA,OAAAA,KAAOhB,WACPkB,QAAAA,IAAAA","file":"main.min.js","sourcesContent":["\r\nconst express = require('express')\r\nconst bodyParser = require('body-parser')\r\nconst db = require('./lib/mongo')\r\nconst jwt = require('./lib/jwt')\r\nconst app = express()\r\nconst port = process.env.PORT || 3000\r\n\r\n\r\n\r\nprocess.env.TZ = 'Asia/Ho_Chi_Minh' \r\n\r\napp.use(bodyParser.urlencoded({ extended: true }))\r\napp.use(express.urlencoded({extended: true}))\r\napp.use(express.json({extended: true}))\r\napp.use(express.static(__dirname))\r\n\r\napp.get('/', (req, res) => {\r\n    res.sendFile('./index.html', {root: __dirname})\r\n})\r\n\r\napp.get('/login', (req, res) => {\r\n    res.sendFile('./login.html', {root: __dirname})\r\n})\r\n\r\napp.get('/me', (req, res) => {\r\n    res.setHeader(\"content-type\", \"application/json; charset=utf-8\")\r\n    let header = req.header('authorization')\r\n    let token = jwt.getTokenFromHeader(header)\r\n    let verify = jwt.verifyJWTToken(token)\r\n    if (!verify) {\r\n        res.send(JSON.stringify({message: \"Token không hợp lệ hoặc đã hết hạn\", success: false}))\r\n    } else {\r\n        res.send(JSON.stringify({message: 'Kiểm tra thông tin thành công', user: verify.user, success: true}))\r\n    }\r\n}) \r\n\r\napp.get('/admin', (req, res) => {\r\n    res.sendFile('./adpanel.html', {root: __dirname})\r\n})\r\n/// api\r\n\r\napp.post('/api/login', async (req, res) => {\r\n    let user = req.body.user\r\n    let password = req.body.password\r\n    let data = await db.findData('plantszombie', 'users', {user: user, password: password})\r\n    res.setHeader(\"content-type\", \"application/json; charset=utf-8\")\r\n    if (data.length > 0) {\r\n        res.send(JSON.stringify({\r\n            success: true,\r\n            token: jwt.createJWTToken({user: user}),\r\n            right: data[0].right,\r\n            message: \"Login thành công\"\r\n        }))\r\n    } else {\r\n        \r\n        res.send(JSON.stringify({\r\n            success: false,\r\n            message: \"Sai tài khoản hoặc mật khẩu\"\r\n        }))\r\n    }\r\n})\r\n\r\n\r\napp.listen(port, function(){\r\n    console.log(\"server is running on port 3000\")\r\n})"]}